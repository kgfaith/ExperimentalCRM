@using ExperimentalCMS.ViewModels;
@model ArticleCreateViewModel
@{
    ViewBag.Title = "Create";
}
<div class="span8">
    @using (Html.BeginForm("Create", "Article", FormMethod.Post, new Dictionary<string, Object> {{ "id", "mainForm"}}))
    {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Create Article</legend>
            <div class="row-fluid">
                <div class="span7">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ArticleName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ArticleName, new { @class = "input-xxlarge" })
                        @Html.ValidationMessageFor(model => model.ArticleName)
                    </div>
                </div>
                <div class="span4">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CreatedDate)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.CreatedDate)
                        @Html.ValidationMessageFor(model => model.CreatedDate)
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span7">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Title)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Title, new { @class = "input-xxlarge" })
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>
                <div class="span4">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PublishDate)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PublishDate)
                        @Html.ValidationMessageFor(model => model.PublishDate)
                    </div>
                </div>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Content)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Content, new { @class = "mb10"})
                @Html.ValidationMessageFor(model => model.Content)
            </div>
            <div class="mt20"></div>
            <h4>Related Places</h4>
            <div id="PlaceOutputDiv" style="width:284px;" class="mb20"> </div>

            <div class="editor-field">
               <input type="text" placeholder="Search Places..." id="SearchPlaces" class="input-xlarge" />
                <input type="hidden" id="SelectedPlaces" class="hidden" />
            </div>

            <p class="mt15 mb300">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn" })
            </p>
        </fieldset>
        <div id="dataHolderForFormSubmit" class="hidden"></div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //TODO: Hardcoding the name of textarea field.
        CKEDITOR.replace("Content");
        var screenScript = PlaceCreate(jQuery);
        screenScript.LetsDoIt();
    </script>
}

<!-- jquery templates -->
<script id="placeList" type="text/x-jquery-tmpl">
	<div class="metal-plate">
        <button type="button" class="close">×</button>
        <strong>${value}</strong>  : <strong>${label}</strong>  
        <input type="hidden" class="hidden" value="${value}" />       
	</div>
</script>
