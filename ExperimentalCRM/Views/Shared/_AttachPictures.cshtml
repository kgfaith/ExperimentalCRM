@model ExperimentalCMS.ViewModels.PhotoViewModel

<div class="row-fluid holder">
    <div class="span12">
        <div class="row-fluid" id="dialog-selected-pics" data-bind="visible: mainSelectedPics() != null && mainSelectedPics().length > 0">
            <div class="span12">
            </div>
        </div>
        <div class="row-fluid" id="attach-options" data-bind="visible: onOptionPage()">
            <div class="span6 calign">
                <button class="btn btn-large btn-success" type="button" data-bind="click: chooseAddNewPhoto">Attach new picture</button>
            </div>
            <div class="span6 calign">
                <button class="btn btn-large" type="button" data-bind="click: chooseAddExistingPhoto">Attach existing picture</button>
            </div>
        </div>

        <div class="row-fluid" id="attach-existing-pics" data-bind="visible: (!onOptionPage() && !isNewPhoto())">
            <div class="span12">
                <div class="row-fluid">
                    <div class="span12 pic-searchbox-row">
                        <input class="input-xxlarge" type="text" placeholder="Search picture title or description" id="search-pictures-box">
                    </div>
                </div>
                <div class="row-fluid pic-searchresult-row">
                    <div class="span12" data-bind="template: { name: 'searchresult-picture-kotemp', foreach: searchResultPics }">

                    </div>
                        
                </div>
                <div class="row-fluid">
                    <div class="pic-searchcontrol-row">
                        <form method="post" id="search-picture-form" data-bind="submit: addToSelectedPictureList">
                            <input type="submit" value="Choose Pictures" class="btn btn-primary" id="submit-selectedPics" />
                            <button type="button" class="btn" data-bind="click: backToOption">Back</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid" id="add-new-picture" data-bind="visible: (!onOptionPage() && isNewPhoto())">
            <div class="span12">
                <div class="row-fluid mt20" id="new-picture-data" data-bind="visible: (!onOptionPage() && isNewPhoto())">
                    <div class="span12">
                        @*<button type="button" class="btn fr" data-bind="click: backToOption">Back</button>*@

                        <form method="post" id="newphoto-form" data-bind="submit: savePhoto">
                            
                            <label class="radio inline">
                                <input type="radio" name="addFlickrPhoto" id="addNormalPhoto" value="false" checked data-bind="checked: isFlickrPhoto.ForEditing ">
                                Add normal photo
                            </label>
                            <label class="radio inline">
                                <input type="radio" name="addFlickrPhoto" id="addFlickrPhoto" value="true"  data-bind="checked: isFlickrPhoto.ForEditing">
                                Add Flickr photo
                            </label>

                            <div class="editor-label mt20" data-bind="visible: isFlickrPhoto()">
                                @Html.LabelFor(model => model.FlickrUrl)
                            </div>
                            <div class="editor-field urlbox" data-bind="visible: isFlickrPhoto()">
                                @*<input type="text" id="newpic_url" placeholder="Flickr url" class="input-xlarge">*@
                                @Html.TextBoxFor(model => model.FlickrUrl, new Dictionary<string, Object> { { "id", "newpic_url" }, { "class", "fl" }, { "placeholder", "Flickr url" }, { "data-bind", "value: newPhotoData().flickrUrl" } })
                                @Html.ValidationMessageFor(model => model.FlickrUrl)
                                <!-- Ajax loader icon -->
                                <div id="floatingCirclesG" class="fl" style="display:none;">
                                    <div class="f_circleG" id="frotateG_01">
                                    </div>
                                    <div class="f_circleG" id="frotateG_02">
                                    </div>
                                    <div class="f_circleG" id="frotateG_03">
                                    </div>
                                    <div class="f_circleG" id="frotateG_04">
                                    </div>
                                    <div class="f_circleG" id="frotateG_05">
                                    </div>
                                    <div class="f_circleG" id="frotateG_06">
                                    </div>
                                    <div class="f_circleG" id="frotateG_07">
                                    </div>
                                    <div class="f_circleG" id="frotateG_08">
                                    </div>
                                </div>
                            </div>
                            <div class="mt20 row-fluid cl" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                            
                                <div class="span6">

                                @*    <div class="editor-label" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.LabelFor(model => model.FileName)
                                    </div>
                                    <div class="editor-field" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.HiddenFor(model => model.FileName,new Dictionary<string, Object> { { "data-bind", "value: newPhotoData().fileName" } })
                                    </div>*@

                                    <div class="editor-label" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.LabelFor(model => model.OwnerName)
                                    </div>
                                    <div class="editor-field" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.TextBoxFor(model => model.OwnerName, new Dictionary<string, Object> { { "id", "normalpicture_ownername" }, { "data-bind", "value: newPhotoData().ownerName" }, { "placeholder", "Owner Name" } })
                                        @Html.ValidationMessageFor(model => model.OwnerName)
                                    </div>

                                    <div class="editor-label" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.LabelFor(model => model.Title)
                                    </div>
                                    <div class="editor-field" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.TextBoxFor(model => model.Title, new Dictionary<string, Object> { { "id", "normalpicture_pictitle" }, { "data-bind", "value: newPhotoData().title" }, { "placeholder", "Picture Title" } })
                                        @Html.ValidationMessageFor(model => model.Title)
                                    </div>

                                    <div class="editor-label" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.LabelFor(model => model.Description)
                                    </div>
                                    <div class="editor-field" data-bind="visible: !isFlickrPhoto() || (isFlickrPhoto() && showAllField())">
                                        @Html.TextBoxFor(model => model.Description, new Dictionary<string, Object> { { "id", "normalpicture_picdescription" }, { "data-bind", "value: newPhotoData().description" }, { "placeholder", "Description" } })
                                        @Html.ValidationMessageFor(model => model.Description)
                                    </div>
                                </div>
                            <div class="span6" data-bind="visible: isFlickrPhoto()">
                                <div class="mt20" data-bind="visible: !newPhotoData().isImageUrlNull()" style="display: none;">
                                    <img data-bind="attr: { src: newPhotoData().imageUrl }" style="width:260px; border-radius: 0.3125em;">
                                    @Html.HiddenFor(model => model.ImageUrl,new Dictionary<string, Object> { { "data-bind", "value: newPhotoData().imageUrl" } })
                                    @Html.HiddenFor(model => model.FileName,new Dictionary<string, Object> { { "data-bind", "value: newPhotoData().fileName" } })
                                </div>
                            </div>

                            <div class="span6" data-bind="visible: !isFlickrPhoto()">
                                <!-- The fileinput-button span is used to style the file input field as button -->
                                <span class="btn btn-success fileinput-button">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    <span>Add files...</span>
                                    <!-- The file input field used as target for the file upload widget -->
                                    <input id="fileupload" type="file" name="files[]" multiple>
                                </span>
                                <br>
                                <br>
                                <!-- The global progress bar -->
                                @*<div id="progress" class="progress">
                                    <div class="progress-bar progress-bar-success"></div>
                                </div>*@
                                <div id="progress" class="progress progress-striped active">
                                    <div class="bar"></div>
                                </div>
                                <!-- The container for the uploaded files -->
                                <div id="files" class="files"></div>
                            </div>

                            </div>

                            <p class="mt20 cl">
                                <input type="submit" value="Create" class="btn btn-primary" id="submit-newphoto" />
                                <button type="button" class="btn" data-bind="click: backToOption">Back</button>
                            </p>
                        </form>

                    </div>
                </div>
            </div>
        </div>

    </div>

</div>
<!--  == Knockout templates ==  -->
<script type="text/html" id="searchresult-picture-kotemp">
    <div class="fl">
        <h6><!--ko text: title--><!--/ko--></h6>
        <div   data-bind="attr: { class : ('pic-result-box ' + ( isSelected() ? ' selected' : '')) }, click: $root.selectSearchResult">
        <img data-bind="attr: { src: imageUrl }" style="width:260px;">
        </div>
    </div>
</script>@*class="pic-result-box"*@